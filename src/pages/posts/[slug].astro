---
import {getCollection, getEntry} from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import Prose from "../../components/Prose.astro";
import Image from 'astro/components/Image.astro';

const {slug} = Astro.params;
if (!slug) throw new Error('Slug not found');
const post = await getEntry('posts', slug);

if (!post) throw new Error('No post found for this slug');
const {Content} = await post.render();

// Generate static pages
export async function getStaticPaths() {
  const posts = await getCollection('posts');
  return posts.map(post => ({params: {slug: post.slug}}));
}

import type { ImageMetadata } from 'astro';
const allCoverImages = import.meta.glob<{ default: ImageMetadata }>('/src/assets/cover_images/posts/*/*.{jpeg,jpg,png,gif,webp}');
const imagePathKey = `/src/assets/cover_images/posts/${slug}/cover_image.jpg`;
const imageImport = allCoverImages[imagePathKey];

if (!imageImport) {
    console.error(`Cover image not found for slug: ${slug} at path: ${imagePathKey}`);
}
---

<Layout title={post.data.title}>
    {imageImport ? (
      <Image src={imageImport()} alt={`Cover image for ${slug}`} width={800} />
    ) : (
      <p>Cover image not available.</p>
    )}
    <Prose>
        <Content/>
    </Prose>
</Layout>
